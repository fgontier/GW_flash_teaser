/* * com.dyc.photo.Slideshow * * by: Scott Hedstrom (scotthedstrom@gmail.com) * url: http://www.destroyyourcomputer.com * * Example Usage: * * import com.dyc.photo.Slideshow; * var my_slideshow:Slideshow = new Slideshow(10, 4, ["http://i2.ytimg.com/vi/a1MQGVFxN64/hqdefault.jpg", "http://www.k12.hi.us/~mathappl/crystal.gif"], "easeOutExpo"); * addChild(my_slideshow); * * my_slideshow.pause(); * my_slideshow.resume(); **/package com.dyc.photo {	import com.globalworks.TextHandle;	import flash.display.Sprite;	import flash.display.Loader;	import flash.events.MouseEvent;		import flash.net.URLRequest;		import flash.utils.Timer;		import flash.events.Event;	import flash.events.TimerEvent;	import flash.events.ProgressEvent;		import caurina.transitions.Tweener;	public class Slideshow_2 extends Sprite {				public var current_portfolio_target:String;				private var photo_list:Array;		private var portfolio_target:Array;		private var photo_label:Array;		private var photo_caption:Array;		private var slide_timer:Timer;		private var slide_loader:Loader;				private var timer_delay:int;		private var current_slide_index:int = -1;		private var total_slides:int;		private var fade_time:int =	1;		private var easing_style:String;				private var current_container:Sprite;		private var image1_container:Sprite;		private var image2_container:Sprite		private var _label:TextHandle;		private var _caption:TextHandle;				public function Slideshow_2( assetsList:XMLList, _timerDelay:int = 5, _fadeTime:Number = 1, _easing:String = "easeOutExpo") 		{			timer_delay = _timerDelay * 1000; // convert to milisec's for Timer()						photo_list = xmlListToArray(assetsList.visual.text());			portfolio_target = xmlListToArray(assetsList.portfolio_target.text());			photo_label = xmlListToArray(assetsList.label.text());			photo_caption = xmlListToArray(assetsList.caption.text());						fade_time = _fadeTime;			easing_style = _easing;						initSlideshow();		}				public function pause():void {			if(slide_timer.running)				slide_timer.stop();		}				public function resume():void {			slide_timer.start();		}		private function initSlideshow():void {			slide_timer = new Timer(timer_delay);			slide_timer.addEventListener(TimerEvent.TIMER, changeSlide);						// Create Containers			image1_container = new Sprite();			image2_container = new Sprite();			addChild(image1_container);			addChild(image2_container);					_label = new TextHandle(400, 50, 0, 340, 18, 0xffffff, "left", true, "left", false, false, true, "helvetica", 0);			image2_container.addChild(_label);						_caption = new TextHandle(400, 50, 0, 370, 12, 0xffffff, "left", true, "left", false, false, true, "helvetica", 0);			image2_container.addChild(_caption);								current_container = image2_container; // reference to front container			total_slides = photo_list.length;						changeSlide();		}				private function displaySlide(e:Event):void {			current_container.addChild(slide_loader.content);			Tweener.addTween(current_container, { alpha:1, time:fade_time, onComplete:function():void { slide_timer.start(); }} );		}		private function changeSlide(e:Event = null):void {			if(slide_timer.running)				slide_timer.stop();						// Any slides left?			if(current_slide_index + 1 < photo_list.length)				current_slide_index++;			else				current_slide_index = 0;					// swap container depths			if(current_container == image2_container)				current_container = image1_container;			else				current_container = image2_container;					// Switch the photo			current_container.alpha = 0;			swapChildren(image2_container, image1_container);					// create a new loader for the slide:			slide_loader = new Loader();			slide_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, displaySlide);			slide_loader.load(new URLRequest(photo_list[current_slide_index]));											// set the label for the slide:			_label.htmlText = photo_label[current_slide_index];						// set the caption for the slide:			_caption.htmlText = photo_caption[current_slide_index];									// set the current portfolio target for this image:			current_portfolio_target = 	portfolio_target[current_slide_index];		}					public static function xmlListToArray($x:XMLList):Array {               			var a:Array=[], i:String;			for (i in $x) a[i] = $x[i];			return a;		}				}}						